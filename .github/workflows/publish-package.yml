name: 'Publish package'

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 'latest'

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm nx build ngx-analog-clock --configuration=production

      - name: Test
        run: pnpm nx test ngx-analog-clock

      - name: Lint
        run: pnpm nx lint ngx-analog-clock

      - name: Extract version from tag
        run: |
          # Extract the version from the tag (e.g., 'refs/tags/v1.2.3' -> '1.2.3')
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set version
        run: |
          npm version ${{ env.VERSION }} --no-git-tag-version
        working-directory: dist/libs/ngx-analog-clock

      - name: Copy repo files
        run: |
          cp README.md dist/libs/ngx-analog-clock/README.md
          cp LICENSE.md dist/libs/ngx-analog-clock/LICENSE.md

      - name: Pack package
        run: |
          npm pack --pack-destination '..'
        working-directory: dist/libs/ngx-analog-clock

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/libs/ngx-analog-clock-${{ env.VERSION }}.tgz

      - name: Attach package to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/libs/ngx-analog-clock-${{ env.VERSION }}.tgz
          tag: ${{ github.ref }}
          overwrite: true

      - name: Publish package to npm
        run: |
          npm publish
        working-directory: dist/libs/ngx-analog-clock
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
